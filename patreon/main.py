import time
from datetime import datetime

from config import bot, chat_id, msk


class Main:
    def log(self, some_str_logs, name, level='ERROR'):
        with open("logs.txt", "a") as f:
            f.write(f"{datetime.now(msk).strftime('%Y-%m-%d %H:%M:%S')}. {name}: {level}: {some_str_logs}\n")

    def is_digit(string):
        if string.isdigit():
            return True
        else:
            try:
                float(string)
                return True
            except ValueError:
                return False

    async def create_link(self, user_name):
        try:
            link = await bot.create_chat_invite_link(chat_id, expire_date=time.time() + 3600, member_limit=1,
                                                     name=user_name)
            return link.invite_link
        except Exception as e:
            self.log(str(e), 'create_link')

    async def kick(self, id_telegram):
        try:
            status = await bot.get_chat_member(chat_id, id_telegram)
            if status['status'] == 'left' or status['status'] == 'kicked':
                print(f"{id_telegram} –Ω–µ—Ç –≤ —á–∞—Ç–µ. –î–æ—Å—Ç—É–ø –≤ —á–∞—Ç –¥–ª—è –Ω–µ–≥–æ –∑–∞–∫—Ä—ã—Ç")
            else:
                await bot.unban_chat_member(chat_id, id_telegram)
                await bot.send_message(chat_id,
                                       f"–ú–Ω–µ –ø—Ä–∏—à–ª–æ—Å—å –≤—ã–≥–Ω–∞—Ç—å <a href='tg://user?id={id_telegram}'>{status['user']['first_name']}</a> –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ :(")
            await bot.send_message(id_telegram, f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É, –ø–æ—ç—Ç–æ–º—É –º–Ω–µ "
                                                f"–ø—Ä–∏—à–ª–æ—Å—å –∏—Å–∫–ª—é—á–∏—Ç—å –í–∞—Å –∏–∑ —á–∞—Ç–∞. "
                                                f"\n\n–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –Ω–∞—à–µ –°–ú–ò –∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤–Ω–æ–≤—å!\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "
                                                f"/start –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º.", parse_mode='HTML')
        except Exception as e:
            self.log(str(e), 'kick')

    async def expired(self, user_id, wallet):
        await bot.send_message(user_id, f"–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –∏—Å—Ç–µ–∫–ª–æ, –º—ã —Ç–∞–∫ –∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –µ–≥–æ.\n\n"
                                        f"–ï—Å–ª–∏ –≤—ã –≤—Å—ë –∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ <code>{wallet}</code>, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å "
                                        f"–≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏...")

    async def success(self, user_id, level, period):
        await bot.send_message(user_id, f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –æ–ø–ª–∞—Ç–∏–ª(-–∞) –ø–æ–¥–ø–∏—Å–∫—É <strong>\"{level}\"</strong> "
                                        f"–Ω–∞ <strong>{period} "
                                        f"–º–µ—Å—è—Ü{'–∞' if period == '3' else ('–µ–≤' if period != '1' else '')}'</strong>, "
                                        f"—Ç–µ–ø–µ—Ä—å –∂–º–∏ –∫–Ω–æ–ø–∫—É üîê –í–æ–π—Ç–∏ –≤ —á–∞—Ç...")

    async def send_comment(self, user_id, comment, amount, currency):
        await bot.send_message(chat_id, f"–î–æ–Ω–∞—Ç-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç <a href='tg://user?id={user_id}'>—é–∑–≤–µ—Ä—è</a> "
                                        f"–Ω–∞ —Å—É–º–º—É <strong>{amount} {currency}</strong>:\n\n"
                                        f"{comment}")
